parser grammar HTMLParser;

options { tokenVocab=HTMLLexer; }
//TODO ALL
programs
 : (htmlPages | phpPages)*
 ;


// TODO PHP PARSER
phpPages
 : PHP_PAGE CONTOLLER_PAGE_NAME CONTROL CONTOLLER_PAGE_NAME OPEN_CURLY_BRACKET_CONTROL contoller_pages COLSE_CURLY_BRACKET_CONTROL
 ;


contoller_pages
 : controller_element+
 ;

controller_element
 : (INSERT_TO|SELECT_OF|VALID_IN) OPEN_BRACKET_INV inv CLOSE_BRACKET_INV table
 | SERVER_NAME DOUBLE_DOT2 ATEXT DOUBLE_QUT
 | USER_NAME DOUBLE_DOT2 ATEXT DOUBLE_QUT
 | PASSWORD DOUBLE_DOT2 ATEXT? DOUBLE_QUT
 | DB_NAME DOUBLE_DOT2 ATEXT DOUBLE_QUT
 | GO GO_VLAUE OPEN_BRACKET_GO go? CLOSE_BRACKET_GO
 | IF OPEN_BRACKET_IF (INSERT_TO|SELECT_OF|VALID_IN) OPEN_BRACKET_INV inv CLOSE_BRACKET_INV table CLOSE_BRACKET_IF OPEN_CURLY_BRACKET_IF if_php+ COLSE_CURLY_BRACKET_IF
 ;

if_php
 : (INSERT_TO_INIF|SELECT_OF_INIF|VALID_IN_INIF) OPEN_BRACKET_INV inv CLOSE_BRACKET_INV table
 | GO_INIF GO_VLAUE OPEN_BRACKET_GO go? CLOSE_BRACKET_GO
 | IF OPEN_BRACKET_IF (INSERT_TO|SELECT_OF|VALID_IN) OPEN_BRACKET_INV inv CLOSE_BRACKET_INV table CLOSE_BRACKET_IF OPEN_CURLY_BRACKET_IF if_php+ COLSE_CURLY_BRACKET_IF
 ;


inv
 :  INV_VLAUE (COMMA_INV INV_VLAUE)*
 ;


go
 : ROLE DOUBLE_DOT_GO GO_VLAUE (DOUBLE_DOT_GO GO_VLAUE)+
 ;


table
 : TABLE_VLAUE
 ;






//TODO HTML PARSER
htmlPages
 : HTML_PAGE PAGE_NAME (EXTENDS PAGE_NAME (COMMA_EXTENDS PAGE_NAME)*)? OPEN_CURLY_BRACKET pages CLOSE_CURLY_BRACKET
 ;

pages
 : BODY_KEY body
 ;

body
 : (element)* END_BODY_KEY
 ;

element
 : OUT_KEY DOUBLE_DOT out
 | IN_KEY DOUBLE_DOT20 in
 | LINK_KEY DOUBLE_DOT4 link
 | FORM_KEY form* END_FORM_KEY
 ;

form
  : OUT_KEY_FORM DOUBLE_DOT out
  | IN_KEY_FORM DOUBLE_DOT20 in
  | LINK_KEY_FORM DOUBLE_DOT4 link
  ;

// TODO out
out
 : BIGTEXT bigText | IMG img | TEXT text | LIST list
 ;

 mustache
   : (DOUBLE_MUSTACHE_OPEN MUSTACHE_TEXT (COMMA_MUSTACHE MUSTACHE_TEXT)* DOUBLE_MUSTACHE_CLOSE)
   ;
//TODO bigText
bigText
 : OPEN_BRACKET attribute_bigText  CLOSE_BRACKET
 ;

attribute_bigText
 : (ATTRIBUTE_SCALE DOUBLE_DOT1 NUMBER_SCALE COMMA ATTRIBUTE_TITLE DOUBLE_DOT2 (ATEXT|mustache)+ DOUBLE_QUT )
 | (ATTRIBUTE_TITLE DOUBLE_DOT2 (ATEXT|mustache)+ DOUBLE_QUT COMMA ATTRIBUTE_SCALE DOUBLE_DOT1 NUMBER_SCALE)
 ;
//TODO img
img
 :OPEN_BRACKET1 attribute_img  CLOSE_BRACKE1
 ;

attribute_img
 : ATTRIBUTE_PATH DOUBLE_DOT2 ATEXT DOUBLE_QUT (COMMA1 ATTRIBUTE_ALT_TEXT DOUBLE_DOT2 ATEXT DOUBLE_QUT)?
 | ATTRIBUTE_ALT_TEXT DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA1 ATTRIBUTE_PATH DOUBLE_DOT2 ATEXT DOUBLE_QUT
 ;
//TODO text
text
 :OPEN_BRACKET2 attribute_text CLOSE_BRACKE2
 ;

attribute_text
 :ATTRIBUTE_TYPE DOUBLE_DOT3 TYPE_TEXT COMMA2 ATTRIBUTE_TITLE1 DOUBLE_DOT2 (ATEXT|mustache)+ DOUBLE_QUT
 |ATTRIBUTE_TITLE1 DOUBLE_DOT2 (ATEXT|mustache)+ DOUBLE_QUT COMMA2 ATTRIBUTE_TYPE DOUBLE_DOT3 TYPE_TEXT
 ;
//TODO list
list
 :OPEN_BRACKET5 attribute_list CLOSE_BRACKET5
 ;
attribute_list
 :ATTRIBUTE_NUMBERED DOUBLE_DOT5 NUMBERED_VALUE (COMMA5 ATTRIBUTE_OPTION OPEN_BRACKET6 (ATEXT|mustache)+ DOUBLE_QUT CLOSE_BRACKET6)*
 ;

//TODO link
link
 : LINK_BUTTON buttonLink | LINK_SIMPLE simpleLink
 ;

buttonLink
 : OPEN_BRACKET3 attribute_buttonLink CLOSE_BRACKET3
 ;

attribute_buttonLink
  : ATTRIBUTE_HREF DOUBLE_DOT2 ATEXT DOUBLE_QUT (COMMA3 ATTRIBUTE_TEXT DOUBLE_DOT2 ATEXT DOUBLE_QUT)?
  | ATTRIBUTE_TEXT DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA3 ATTRIBUTE_HREF DOUBLE_DOT2 ATEXT DOUBLE_QUT
  ;

simpleLink
 : OPEN_BRACKET4 attribute_simpleLink CLOSE_BRACKET4
 ;
attribute_simpleLink
  : ATTRIBUTE_HREF1 DOUBLE_DOT2 ATEXT DOUBLE_QUT (COMMA4 ATTRIBUTE_TEXT2 DOUBLE_DOT2 ATEXT DOUBLE_QUT)?
  | ATTRIBUTE_TEXT2 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA4 ATTRIBUTE_HREF1 DOUBLE_DOT2 ATEXT DOUBLE_QUT
  ;


 //TODO in
 in
 : IN_FIELD field | IN_SELECT select
 ;

 field
  : OPEN_BRACKET21  attribute_field CLOSE_BRACKET21
  ;
  select
   : OPEN_BRACKET23 attribute_select CLOSE_BRACKET23
   ;

attribute_field
:
  (ATTRIBUTE_TITLE21 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA21)?
  ATTRIBUTE_TYPE21 DOUBLE_DOT22 TYPE_FIELD COMMA21
  ATTRIBUTE_NAME21 DOUBLE_DOT2 ATEXT DOUBLE_QUT
  (COMMA21 ATTRIBUTE_HINT21 DOUBLE_DOT2 ATEXT DOUBLE_QUT)?
  (COMMA21 ATTRIBUTE_REQUIRED21)?
|
ATTRIBUTE_TYPE21 DOUBLE_DOT22 TYPE_FIELD COMMA21
  (ATTRIBUTE_TITLE21 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA21)?
ATTRIBUTE_NAME21 DOUBLE_DOT2 ATEXT DOUBLE_QUT
  (COMMA21 ATTRIBUTE_HINT21 DOUBLE_DOT2 ATEXT DOUBLE_QUT)?
  (COMMA21 ATTRIBUTE_REQUIRED21)?
  |
ATTRIBUTE_NAME21 DOUBLE_DOT2 ATEXT DOUBLE_QUT
ATTRIBUTE_TYPE21 DOUBLE_DOT22 TYPE_FIELD COMMA21
  (ATTRIBUTE_TITLE21 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA21)?
  (COMMA21 ATTRIBUTE_HINT21 DOUBLE_DOT2 ATEXT DOUBLE_QUT)?
  (COMMA21 ATTRIBUTE_REQUIRED21)?


;

attribute_select
: (ATTRIBUTE_OPTION23 OPEN_BRACKET24 (ATTRIBUTE_TITLE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA24 ATTRIBUTE_VALUE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT
| ATTRIBUTE_VALUE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA24 ATTRIBUTE_TITLE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT) CLOSE_BRACKET24 COMMA23)+
ATTRIBUTE_NAME23 DOUBLE_DOT2 ATEXT DOUBLE_QUT
| ATTRIBUTE_NAME23 DOUBLE_DOT2 ATEXT DOUBLE_QUT
(ATTRIBUTE_OPTION23 OPEN_BRACKET24 (ATTRIBUTE_TITLE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA24 ATTRIBUTE_VALUE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT
| ATTRIBUTE_VALUE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT COMMA24 ATTRIBUTE_TITLE24 DOUBLE_DOT2 ATEXT DOUBLE_QUT) CLOSE_BRACKET24 COMMA23)+
;
